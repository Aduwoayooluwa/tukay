---
import Layout from '../layouts/Layout.astro';
import Currencies from "../components/Currencies";
import TukayBoyChristmas from "../assets/images/tukay_boy_2_no.png";
import Shape from "../components/Shape";
import HowItWorks from "../home/HowItWorks";
import CTA from "../home/CTA";
import Footer from "../home/Footer";
import Navbar from '../home/Navbar';
import HomePage from "../home/App"
---

<Layout title="Tukay">
	<main class="relative w-full grid place-items-center">
		<!-- hero section -->
		<section class="relative container hero">
			<div class=" w-full py-0 md:py-3 grid place-items-center">
			<Navbar client:load />
		</div>
		<div class=" hidden md:flex px-20 absolute w-full top-28 ">
			<svg width="300" height="100" viewBox="0 0 300 100" xmlns="http://www.w3.org/2000/svg">
				<defs>
					<linearGradient id="gradient" x1="0%" y1="0%" x2="100%" y2="100%">
						<stop offset="0%" style="stop-color:rgb(255,255,255);stop-opacity:0.9" />
						<stop offset="100%" style="stop-color:rgb(0,0,0);stop-opacity:0.2" />
					</linearGradient>
				</defs>
				<line x1="10" y1="10" x2="50" y2="50" stroke="url(#gradient)" stroke-width="4"/>
				<line x1="50" y1="50" x2="10" y2="90" stroke="url(#gradient)" stroke-width="4"/>
				<line x1="60" y1="10" x2="100" y2="50" stroke="url(#gradient)" stroke-width="4"/>
				<line x1="100" y1="50" x2="60" y2="90" stroke="url(#gradient)" stroke-width="4"/>
				<text x="110" y="60" font-family="Space mono" font-size="50" fill="url(#gradient)">tukay</text>
			</svg>
			
		</div>
			<section class="w-full -mt-0 md:-mt-10 flex flex-col md:flex-row items-center justify-between">
			<div class="mt-10 md:mt-0">
				<p class="text-4xl font-semibold md:text-6xl w-full md:w-[600px] text-start">Do you want to beg for <span class="text-gradient">tukay ?</span></p>
			</div>

			<div>
				<div class="absolute right-10 opacity-20 md:opacity-100 md:left-20 top-40 md:bottom-0">
					<Shape client:load />
				</div>
				<img class="w-full md:w-[600px]" src={TukayBoyChristmas.src} alt="tukay boy" />
			</div>
			</section>
		</section>
		<HowItWorks client:load />
		<Currencies client:load />
		<CTA client:load/>
		<!-- <Footer client:load /> -->
		
	</main>

	
</Layout>

<style>
	main {
		margin: auto;
		padding: 1rem;
		color: white;
		font-size: 20px;
		line-height: 1.6;
	}
	.astro-a {
		position: absolute;
		top: -32px;
		left: 50%;
		transform: translatex(-50%);
		width: 220px;
		height: auto;
		z-index: -1;
	}
	h1 {
		font-size: 3rem;
		font-weight: 700;
		line-height: 1;
		text-align: center;
		margin-bottom: 1em;
	}
	.text-gradient {
		background-image: var(--accent-gradient);
		-webkit-background-clip: text;
		-webkit-text-fill-color: transparent;
		background-size: 400%;
		background-position: 0%;
	}
	.hero {
		background-color: #e5e5f7;
		opacity: 0.8;
		background-image: radial-gradient(#11535c 0.5px, #13151a 0.5px);
		background-size: 10px 10px;
	}
	.beg-button {
    padding: 10px 20px;
    background-color: #11535c;
    color: white;
    border: none;
    border-radius: 5px;
    cursor: pointer;
    font-size: 18px;
    transition: background-color 0.3s ease;
	}
	.beg-button:hover {
		background-color: #d03;
	}


	.instructions {
		margin-bottom: 2rem;
		border: 1px solid rgba(var(--accent-light), 25%);
		background: linear-gradient(rgba(var(--accent-dark), 66%), rgba(var(--accent-dark), 33%));
		padding: 1.5rem;
		border-radius: 8px;
	}
	.instructions code {
		font-size: 0.8em;
		font-weight: bold;
		background: rgba(var(--accent-light), 12%);
		color: rgb(var(--accent-light));
		border-radius: 4px;
		padding: 0.3em 0.4em;
	}
	.instructions strong {
		color: rgb(var(--accent-light));
	}
</style>

<script>
    import { gsap } from 'gsap';
    import { ScrollTrigger } from 'gsap/ScrollTrigger';

    gsap.registerPlugin(ScrollTrigger);

    if (ScrollTrigger) {
        gsap.from("svg line", { duration: 1, opacity: 0, y: 20, stagger: 0.2 });
        gsap.from("svg text", { duration: 1, delay: 0.8, opacity: 0, x: -20 });
        gsap.from("h1", { duration: 1.5, delay: 1, y: 20, opacity: 0 });
        gsap.from("img", { duration: 1.5, delay: 1.2, scale: 0.8, opacity: 0 });

        gsap.utils.toArray("section").forEach((section: any) => {
            gsap.from(section, {
                scrollTrigger: {
                    trigger: section,
                    start: "top bottom-=100",
                    toggleActions: "restart none restart none"
                },
                duration: 1,
                opacity: 0,
                y: 30
            });
        });
    }
	
</script>

